function output2DLookup(filepath, filename, x, y, Z, kmin, gammaMax)

    nx = numel(x);
    ny = numel(y);
    
    if nx*ny ~= numel(Z)
        error(['Dimensions mismatch! Size of Z =/= ',num2str(nx),'-by-',num2str(ny),'.']);
    end
    
    fid = fopen([filepath,filename,'_lookup.c'], 'w');
    
    fprintf(fid, ['/* This file was automatically generated by `output2Dlookup.m` */',10,10]);
    
    fprintf(fid, ['const double sycamera_%s_lookup_kmin = %.16e;',10], filename, kmin);
    fprintf(fid, ['const double sycamera_%s_lookup_gammaMax = %.16e;',10], filename, gammaMax);
    fprintf(fid, ['const int sycamera_%s_lookup_nx = %d;',10], filename, nx);
    fprintf(fid, ['const int sycamera_%s_lookup_ny = %d;',10], filename, ny);
    fprintf(fid, ['const double sycamera_%s_lookup_x[%d] = {',10], filename, nx);
    
    for i=1:nx
        % Insert tab?
        if mod(i,10) == 1
            fwrite(fid, 9);
        end
        
        fwrite(fid, num2str(x(i),16));
        
        if i < numel(x)
            fwrite(fid, ',');
        end
        % Insert newline?
        if mod(i,10) == 0
            fwrite(fid, 10);
        end
    end
    fwrite(fid, ['};',10]);
    
    fprintf(fid, ['const double sycamera_%s_lookup_y[%d] = {',10], filename, ny);
    for i=1:ny
        % Insert tab?
        if mod(i,10) == 1
            fwrite(fid, 9);
        end
        
        fwrite(fid, num2str(y(i),16));
        
        if i < numel(y)
            fwrite(fid, ',');
        end
        % Insert newline?
        if mod(i,10) == 0
            fwrite(fid, 10);
        end
    end
    fwrite(fid, ['};',10,10]);
    
    fprintf(fid, ['const double sycamera_%s_lookup_Z[%d] = {',10], filename, (nx*ny));
    rz = reshape(Z, [1,nx*ny]);
    nz = numel(rz);
    for i=1:nz
        % Insert tab?
        if mod(i,10) == 1
            fwrite(fid, 9);
        end
        
        fwrite(fid, num2str(rz(i),16));
        
        if i < numel(rz)
            fwrite(fid, ',');
        end
        % Insert newline?
        if mod(i,10) == 0
            fwrite(fid, 10);
        end
    end
    fwrite(fid, ['};',10,10]);
    
    fclose(fid);

end